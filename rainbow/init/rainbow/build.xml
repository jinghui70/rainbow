<project name="your project" basedir=".">
	<property environment="env" />
	<property name="version" value="${env.VERSION}" />
	<property name="dist" location="../dist" />

	<macrodef name="cleanBundle">
		<attribute name="bundleDir" />
		<sequential>
			<delete>
				<fileset dir="@{bundleDir}">
					<include name="db.db2.jar" />
					<include name="db.oracle.jar" />
					<include name="db.mysql.jar" />
				</fileset>
			</delete>
		</sequential>
	</macrodef>

	<!-- 更新Rainbow -->
	<target name="UpdateRainbow" description="update rainbow">
		<!-- 获取Rainbow版本并下载 -->
		<loadresource property="rainbowVersion">
			<file file="rainbow.version" />
		</loadresource>
		<get dest="." src="https://github.com/jinghui70/rainbow/releases/download/${rainbowVersion}/dev-${rainbowVersion}.zip" skipexisting="true" />
		<get dest="." src="https://github.com/jinghui70/rainbow/releases/download/${rainbowVersion}/deploy-${rainbowVersion}.zip" skipexisting="true" />
		<!-- 展开开发包 -->
		<delete dir="bundle" />
		<delete file="lib/core.jar" />
		<unzip src="dev-${rainbowVersion}.zip" dest="." />
		<cleanBundle bundleDir="bundle" />
		<delete>
			<fileset dir=".">
				<include name="*.zip" />
				<exclude name="dev-${rainbowVersion}.zip" />
				<exclude name="deploy-${rainbowVersion}.zip" />
			</fileset>
		</delete>
	</target>
	<target name="getLastRainbowVersion">
		<loadresource property="u">
			<url url="https://api.github.com/repos/jinghui70/rainbow/releases/latest" />
			<filterchain>
				<replaceregex pattern=".*tag_name&quot;:&quot;(.*?)&quot;.*" replace="\1" />
			</filterchain>
		</loadresource>
		<echo file="rainbow.version">${u}</echo>
	</target>

	<!-- 更新并下载library，更新RainbowLibraray，需重启Eclispe生效 -->
	<target name="EclipseLibrary" description="set eclipse user library">
		<ant antfile="corelib.xml" />
		<java classname="rainbow.core.ant.LibraryWorker">
			<arg value="eclipse" />
			<classpath>
				<fileset dir="lib" includes="*.jar" />
			</classpath>
		</java>
		<echo>请重新启动Eclispe</echo>
	</target>

	<!-- 更新所有插件的classpath -->
	<target name="EclipseClasspath" description="set classpath">
		<java classname="rainbow.core.ant.ClassPathMaker">
			<classpath>
				<fileset dir="lib" includes="*.jar" />
			</classpath>
		</java>
	</target>

	<target name="init" depends="UpdateRainbow, EclipseLibrary" description="first time to initialize dev enviroment">
	</target>
	<target name="UpgradeRainbow" depends="getLastRainbowVersion, UpdateRainbow, EclipseLibrary" description="upgrade rainbow to the last version">
	</target>


	<target name="clear">
		<delete dir="${dist}" />
		<mkdir dir="${dist}" />
	</target>
	<target name="downloadJar">
		<ant antfile="corelib.xml" />
		<java classname="rainbow.core.ant.LibraryWorker">
			<classpath>
				<fileset dir="lib" includes="*.jar" />
			</classpath>
		</java>
	</target>
	<target name="bundles">
		<java classname="rainbow.core.ant.BundleAware">
			<classpath>
				<fileset dir="lib" includes="*.jar" />
			</classpath>
		</java>
		<property file="${dist}/bundles.properties">
		</property>
		<echo>${BUNDLES}</echo>
		<delete file="${dist}/bundles.properties" />
	</target>

	<target name="build-deploy" depends="clear, UpdateRainbow, downloadJar, bundles">
		<unzip src="deploy-${rainbowVersion}.zip" dest="${dist}/deploy" />
		<cleanBundle bundleDir="${dist}/deploy/bundle" />
		<subant target="build_deploy" genericantfile="build_bundle.xml" inheritall="true" failonerror="true">
			<filelist dir="../" files="${BUNDLES}" />
		</subant>
		<copy todir="${dist}/deploy/lib">
			<fileset dir="lib">
				<include name="*.jar" />
				<exclude name="core.jar" />
			</fileset>
		</copy>
		<copy todir="${dist}/deploy/conf" includeEmptyDirs="no">
			<fileset dir="conf">
				<exclude name="**/*.dev" />
				<exclude name="**/*.dev/**" />
			</fileset>
		</copy>
	</target>

	<target name="MakeDevelopDatabase" description="Make develop database">
		<java classname="rainbow.db.ant.DevWork">
			<classpath>
				<fileset dir="lib" includes="**/*.jar" />
				<fileset dir="bundle" includes="db*.jar" />
			</classpath>
			<!-- 数据源配置名 -->
			<arg value="demo" />
			<!--
			<arg value="初始化数据目录1" />
			<arg value="初始化数据目录2" />
			-->
		</java>
	</target>

	<target name="deploy-database" description="Make deploy database">
		<mkdir dir="${dist}/db" />
		<java classname="rainbow.db.ant.DeployWork">
			<classpath>
				<fileset dir="lib" includes="**/*.jar" />
				<fileset dir="bundle" includes="db*.jar" />
			</classpath>
			<!-- 模型文件名 -->
			<arg value="demo.rdmx" />
			<!-- 数据库类型 -->
			<arg value="H2" />
			<!--
			<arg value="初始化数据目录1" />
			<arg value="初始化数据目录2" />
			-->
		</java>
	</target>

	<target name="deploy" depends="build-deploy,deploy-database" description="deploy" />

</project>